// ุงุฎุชุจุงุฑ ูุธุงุฆู ุงูุฃุฏูุงุฑ ุงููุชุนุฏุฏุฉ
// ูุฐุง ุงูููู ููุงุฎุชุจุงุฑ ูุงูุชุทููุฑ ููุท

import { checkAvailableRoles, loginWithRoleCheck } from '../services/authService';

// ูุซุงู ุนูู ุจูุงูุงุช ุงุฎุชุจุงุฑ
const testCredentials = {
  nationalId: '3234567891', // ุงูุทุงูุจ ุงูุฐู ูุณุฌู ุฏุฎูู ุจูุฌุงุญ ูุทุงูุจ ููุนูู
  password: 'test123'
};

// ุฏุงูุฉ ุงุฎุชุจุงุฑ ูุญุต ุงูุฃุฏูุงุฑ ุงููุชุงุญุฉ
export const testMultipleRoles = async () => {
  console.group('๐งช ุงุฎุชุจุงุฑ ุงูุฃุฏูุงุฑ ุงููุชุนุฏุฏุฉ');
  
  try {
    console.log('๐ ุงุฎุชุจุงุฑ ูุญุต ุงูุฃุฏูุงุฑ ุงููุชุงุญุฉ...');
    const availableRoles = await checkAvailableRoles(testCredentials);
    console.log('ุงูุฃุฏูุงุฑ ุงููุชุงุญุฉ:', availableRoles);
    
    if (availableRoles.length === 0) {
      console.error('โ ูุง ุชูุฌุฏ ุฃุฏูุงุฑ ูุชุงุญุฉ');
      return;
    }
    
    if (availableRoles.length === 1) {
      console.log('โ ุฏูุฑ ูุงุญุฏ ููุท:', availableRoles[0]);
    } else {
      console.log('๐ ุฃุฏูุงุฑ ูุชุนุฏุฏุฉ ูุชุงุญุฉ:', availableRoles);
    }
    
    console.log('๐ ุงุฎุชุจุงุฑ ุชุณุฌูู ุงูุฏุฎูู ูุน ูุญุต ุงูุฃุฏูุงุฑ...');
    const loginResult = await loginWithRoleCheck(testCredentials);
    
    if ('multipleRoles' in loginResult) {
      console.log('๐ฏ ุงููุชูุฌุฉ: ุฃุฏูุงุฑ ูุชุนุฏุฏุฉ -', loginResult.multipleRoles);
      console.log('โ ุณูุชู ุนุฑุถ ุตูุญุฉ ุงุฎุชูุงุฑ ุงูุฏูุฑ ูููุณุชุฎุฏู');
    } else {
      console.log('โ ุงููุชูุฌุฉ: ุชุณุฌูู ุฏุฎูู ูุจุงุดุฑ -', loginResult.user.defaultRole);
      console.log('ุงููุณุชุฎุฏู:', loginResult.user.name);
      console.log('ุงูุชูุฌูู ุฅูู:', loginResult.redirectPath);
    }
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ:', error);
  }
  
  console.groupEnd();
};

// ุฏุงูุฉ ุงุฎุชุจุงุฑ ุญุงูุงุช ูุฎุชููุฉ
export const testDifferentScenarios = async () => {
  console.group('๐ฌ ุงุฎุชุจุงุฑ ุญุงูุงุช ูุฎุชููุฉ');
  
  const testCases = [
    {
      name: 'ูุณุชุฎุฏู ุบูุฑ ููุฌูุฏ',
      credentials: { nationalId: '9999999999', password: 'wrongpass' }
    },
    {
      name: 'ูููุฉ ูุฑูุฑ ุฎุงุทุฆุฉ',
      credentials: { nationalId: '3234567891', password: 'wrongpass' }
    },
    {
      name: 'ูุณุชุฎุฏู ุตุญูุญ',
      credentials: { nationalId: '3234567891', password: 'test123' }
    }
  ];
  
  for (const testCase of testCases) {
    console.log(`\n๐ ุงุฎุชุจุงุฑ: ${testCase.name}`);
    try {
      const result = await loginWithRoleCheck(testCase.credentials);
      if ('multipleRoles' in result) {
        console.log('โ ุฃุฏูุงุฑ ูุชุนุฏุฏุฉ:', result.multipleRoles);
      } else {
        console.log('โ ุชุณุฌูู ุฏุฎูู ูุงุฌุญ:', result.user.defaultRole);
      }
    } catch (error: any) {
      console.log('โ ูุดู ูุชููุน:', error.message);
    }
  }
  
  console.groupEnd();
};

// ุฏุงูุฉ ุงุฎุชุจุงุฑ ุดุงููุฉ
export const runAllTests = async () => {
  console.log('๐ ุจุฏุก ุงูุงุฎุชุจุงุฑุงุช ุงูุดุงููุฉ ููุฃุฏูุงุฑ ุงููุชุนุฏุฏุฉ');
  console.log('=' .repeat(50));
  
  await testMultipleRoles();
  await testDifferentScenarios();
  
  console.log('=' .repeat(50));
  console.log('โ ุงูุชูุช ุฌููุน ุงูุงุฎุชุจุงุฑุงุช');
};

// ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช ุชููุงุฆูุงู ูู ุจูุฆุฉ ุงูุชุทููุฑ
if (process.env.NODE_ENV === 'development') {
  // ูููู ุงุณุชุฏุนุงุก runAllTests() ูู ูุญุฏุฉ ุงูุชุญูู ูู ุงููุชุตูุญ
  (window as any).runMultiRoleTests = runAllTests;
  console.log('๐ก ูุชุดุบูู ุงุฎุชุจุงุฑุงุช ุงูุฃุฏูุงุฑ ุงููุชุนุฏุฏุฉุ ุงูุชุจ ูู ูุญุฏุฉ ุงูุชุญูู: runMultiRoleTests()');
}
